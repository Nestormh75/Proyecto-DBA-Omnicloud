{"t":{"$date":"2024-12-05T10:46:07.268Z"},"s":"I","c":"MONGOSH","id":1000000000,"ctx":"log","msg":"Starting log","attr":{"execPath":"/usr/bin/mongosh","envInfo":{"EDITOR":null,"NODE_OPTIONS":null,"TERM":null},"version":"2.3.4","distributionKind":"compiled","buildArch":"x64","buildPlatform":"linux","buildTarget":"linux-x64","buildTime":"2024-11-25T21:06:12.633Z","gitVersion":"ce418fac5b229e2e4d45c58480d49af445b592ae","nodeVersion":"v20.18.1","opensslVersion":"3.0.15+quic","sharedOpenssl":false,"runtimeArch":"x64","runtimePlatform":"linux","runtimeGlibcVersion":"2.39","deps":{"nodeDriverVersion":"6.11.0","libmongocryptVersion":"1.11.0","libmongocryptNodeBindingsVersion":"6.1.0","kerberosVersion":"2.1.0"}}}
{"t":{"$date":"2024-12-05T10:46:07.285Z"},"s":"I","c":"MONGOSH","id":1000000005,"ctx":"config","msg":"User updated"}
{"t":{"$date":"2024-12-05T10:46:07.286Z"},"s":"I","c":"MONGOSH","id":1000000048,"ctx":"config","msg":"Loading global configuration file","attr":{"filename":"/etc/mongosh.conf","found":false}}
{"t":{"$date":"2024-12-05T10:46:07.480Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000049,"ctx":"mongosh-connect","msg":"Loaded system CA list","attr":{"caCount":293,"asyncFallbackError":null,"systemCertsError":null,"messages":[]}}
{"t":{"$date":"2024-12-05T10:46:07.525Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000042,"ctx":"mongosh-connect","msg":"Initiating connection attempt","attr":{"uri":"mongodb://127.0.0.1:27017/db?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.3.4","driver":{"name":"nodejs|mongosh","version":"6.11.0|2.3.4"},"devtoolsConnectVersion":"3.3.3","host":"127.0.0.1:27017"}}
{"t":{"$date":"2024-12-05T10:46:07.542Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000035,"ctx":"mongosh-connect","msg":"Server heartbeat succeeded","attr":{"connectionId":"127.0.0.1:27017"}}
{"t":{"$date":"2024-12-05T10:46:07.633Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000037,"ctx":"mongosh-connect","msg":"Connection attempt finished"}
{"t":{"$date":"2024-12-05T10:46:07.644Z"},"s":"I","c":"MONGOSH","id":1000000010,"ctx":"shell-api","msg":"Initialized context","attr":{"method":"setCtx","arguments":{}}}
{"t":{"$date":"2024-12-05T10:46:07.649Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000019,"ctx":"snippets","msg":"Loaded snippets","attr":{"installdir":"/data/db/.mongodb/mongosh/snippets"}}
{"t":{"$date":"2024-12-05T10:46:07.880Z"},"s":"I","c":"MONGOSH","id":1000000003,"ctx":"repl","msg":"Start loading CLI scripts"}
{"t":{"$date":"2024-12-05T10:46:07.890Z"},"s":"I","c":"MONGOSH","id":1000000012,"ctx":"shell-api","msg":"Loading file via load()","attr":{"nested":false,"filename":"/docker-entrypoint-initdb.d/init-mongo.js"}}
{"t":{"$date":"2024-12-05T10:46:07.899Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.createCollection('customers', { capped: false });\r\n\r\ndb.customers.insert([\r\n    {\r\n        \"customer_name\": \"John Doe\"\r\n    },    \r\n    {   \r\n        \"customer_name\": \"Jane Smith\"\r\n    },        \r\n    {\r\n        \"customer_name\": \"Alice Johnson\"\r\n    },\r\n    {    \r\n        \"customer_name\": \"Bob Brown\"\r\n    },\r\n    {        \r\n        \"customer_name\": \"Carol White\"\r\n    }\r\n]);\r\n\r\ndb.createCollection('products', { capped: false });\r\n\r\ndb.products.insert([\r\n    {\r\n        \"product_name\": \"Laptop\",\r\n        \"product_price\": \"1200.50\"\r\n    },    \r\n    {   \r\n        \"customer_name\": \"Smartphone\",\r\n        \"product_price\": \"800.75\"\r\n    },        \r\n    {\r\n        \"customer_name\": \"Tablet\",\r\n        \"product_price\": \"300.00\"\r\n    },\r\n    {    \r\n        \"customer_name\": \"Monitor\",\r\n        \"product_price\": \"150.99\"\r\n    },\r\n    {        \r\n        \"customer_name\": \"Keyboard\",\r\n        \"product_price\": \"50.00\"\r\n    }\r\n]);\r\n\r\ndb.createCollection('orders', { capped: false });\r\n\r\ndb.orders.insert([\r\n    {\r\n        \"customer_id\": \"1\",\r\n        \"product_id\": \"1\",\r\n        \"order_date\": \"2024-01-01 10:00:00\"\r\n    },    \r\n    {   \r\n        \"customer_id\": \"2\",\r\n        \"product_id\": \"2\",\r\n        \"order_date\": \"2024-01-02 11:30:00\"\r\n    },        \r\n    {\r\n        \"customer_id\": \"3\",\r\n        \"product_id\": \"3\",\r\n        \"order_date\": \"2024-01-03 15:45:00\"\r\n    },\r\n    {    \r\n        \"customer_id\": \"4\",\r\n        \"product_id\": \"4\",\r\n        \"order_date\": \"2024-01-04 09:20:00\"\r\n    },\r\n    {        \r\n        \"customer_id\": \"5\",\r\n        \"product_id\": \"5\",\r\n        \"order_date\": \"2024-01-05 14:10:00\"\r\n    }\r\n]);\r\n\r\n\r\ndb.createCollection('logs', { capped: false });\r\n\r\ndb.logs.insert([\r\n    {\r\n        \"timestamp\": new Date(),\r\n        \"level\": \"INFO\",\r\n        \"message\": \"El sistema se ha iniciado correctamente.\",\r\n        \"userId\": Math.floor(Math.random() * 1000),\r\n        \"sessionId\": Math.random().toString(36).substring(2, 15)\r\n    },\r\n    {\r\n        \"timestamp\": new Date(),\r\n        \"level\": \"ERROR\",\r\n        \"message\": \"Error al procesar la solicitud de usuario.\",\r\n        \"userId\": Math.floor(Math.random() * 1000),\r\n        \"sessionId\": Math.random().toString(36).substring(2, 15)\r\n    },\r\n    {\r\n        \"timestamp\": new Date(),\r\n        \"level\": \"WARNING\",\r\n        \"message\": \"El uso de memoria ha alcanzado el 80%.\",\r\n        \"userId\": Math.floor(Math.random() * 1000),\r\n        \"sessionId\": Math.random().toString(36).substring(2, 15)\r\n    },\r\n    {\r\n        \"timestamp\": new Date(),\r\n        \"level\": \"DEBUG\",\r\n        \"message\": \"La función de inicio se está ejecutando.\",\r\n        \"userId\": Math.floor(Math.random() * 1000),\r\n        \"sessionId\": Math.random().toString(36).substring(2, 15)\r\n    },\r\n    {\r\n        \"timestamp\": new Date(),\r\n        \"level\": \"INFO\",\r\n        \"message\": \"Usuario ha realizado una compra.\",\r\n        \"userId\": Math.floor(Math.random() * 1000),\r\n        \"sessionId\": Math.random().toString(36).substring(2, 15)\r\n    },\r\n    {\r\n        \"timestamp\": new Date(),\r\n        \"level\": \"ERROR\",\r\n        \"message\": \"No se pudo conectar a la base de datos.\",\r\n        \"userId\": Math.floor(Math.random() * 1000),\r\n        \"sessionId\": Math.random().toString(36).substring(2, 15)\r\n    },\r\n    {\r\n        \"timestamp\": new Date(),\r\n        \"level\": \"INFO\",\r\n        \"message\": \"El usuario ha cerrado la sesión.\",\r\n        \"userId\": Math.floor(Math.random() * 1000),\r\n        \"sessionId\": Math.random().toString(36).substring(2, 15)\r\n    },\r\n    {\r\n        \"timestamp\": new Date(),\r\n        \"level\": \"DEBUG\",\r\n        \"message\": \"Se ha procesado un pedido a través de la API.\",\r\n        \"userId\": Math.floor(Math.random() * 1000),\r\n        \"sessionId\": Math.random().toString(36).substring(2, 15)\r\n    },\r\n    {\r\n        \"timestamp\": new Date(),\r\n        \"level\": \"WARNING\",\r\n        \"message\": \"Se ha alcanzado el límite de intentos fallidos de acceso.\",\r\n        \"userId\": Math.floor(Math.random() * 1000),\r\n        \"sessionId\": Math.random().toString(36).substring(2, 15)\r\n    },\r\n    {\r\n        \"timestamp\": new Date(),\r\n        \"level\": \"INFO\",\r\n        \"message\": \"La aplicación está en ejecución y esperando solicitudes.\",\r\n        \"userId\": Math.floor(Math.random() * 1000),\r\n        \"sessionId\": Math.random().toString(36).substring(2, 15)\r\n    }\r\n]);\r\n\r\n// Confirmar que se han insertado los registros\r\nprint(\"Registros insertados en la colección 'logs'.\");"}}
{"t":{"$date":"2024-12-05T10:46:07.900Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"createCollection","class":"Database","db":"db","arguments":{"name":"customers","options":{"capped":false}}}}
{"t":{"$date":"2024-12-05T10:46:07.901Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"userId":null,"telemetryAnonymousId":"6751846dd0300777b0e94968","connectionUri":"mongodb://<ip address>:27017/db?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.3.4","mongosh_version":"2.3.4","session_id":"6751846f81fa199d3fe94969","is_localhost":true,"is_do_url":false,"is_atlas_url":false,"is_atlas":false,"server_version":"8.0.3","node_version":"v20.18.1","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"is_stream":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","is_local_atlas":false,"fcv":"8.0","api_version":null,"api_strict":null,"api_deprecation_errors":null,"atlas_hostname":null}}
{"t":{"$date":"2024-12-05T10:46:07.943Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"db","coll":"customers","arguments":{"options":{}}}}
{"t":{"$date":"2024-12-05T10:46:07.952Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"createCollection","class":"Database","db":"db","arguments":{"name":"products","options":{"capped":false}}}}
{"t":{"$date":"2024-12-05T10:46:08Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"db","coll":"products","arguments":{"options":{}}}}
{"t":{"$date":"2024-12-05T10:46:08.004Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"createCollection","class":"Database","db":"db","arguments":{"name":"orders","options":{"capped":false}}}}
{"t":{"$date":"2024-12-05T10:46:08.056Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"db","coll":"orders","arguments":{"options":{}}}}
{"t":{"$date":"2024-12-05T10:46:08.062Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"createCollection","class":"Database","db":"db","arguments":{"name":"logs","options":{"capped":false}}}}
{"t":{"$date":"2024-12-05T10:46:08.117Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"db","coll":"logs","arguments":{"options":{}}}}
{"t":{"$date":"2024-12-05T10:46:08.122Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"insert"}}
{"t":{"$date":"2024-12-05T10:46:08.124Z"},"s":"I","c":"MONGOSH","id":1000000045,"ctx":"analytics","msg":"Flushed outstanding data","attr":{"flushError":"Trying to persist throttle state before userId is set","flushDuration":0}}
